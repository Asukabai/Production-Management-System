<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ss.managesys.mapper.OperatorMapper">

    <!--    /**【提交任务】修改对应的字段内容*/
    Integer updateTaskOperatorSend(Integer operatorId,Integer examinerId,String prodMode,String taskName);
        /*修改 移交任务 检验员  一个变成多个 2023-4-17
     *   1、不用再设置传入检验员为实际检验员；*/
            UPDATE task SET if_operator_sub = 1,operator_id = #{operatorId},examiner_id = #{examinerId}
            WHERE prod_model = #{prodMode} AND task_name = #{taskName} AND ifdelete = 0;-->
    <update id="updateTaskOperatorSend">
        UPDATE task SET if_operator_sub = 1,operator_id = #{operatorId},task_status = 5,examin_status = 4
        WHERE prod_model = #{prodMode} AND task_name = #{taskName} AND ifdelete = 0;
    </update>

    <!--    /**select task*/ 未删除的于当前匹配的 任务-->
    <select id="selectTask" resultType="com.ss.managesys.entity.po.Task">
        SELECT t1.* FROM task AS t1
        LEFT JOIN product AS t2 ON t1.prod_model = t2.prod_model
        WHERE t1.prod_model = #{prodMode} AND t1.task_name = #{taskName} AND t1.ifdelete = 0
        AND t2.prod_status != 5;
    </select>


    <!--【操作员产品任务列表】》》查出 产品型号和任务名称含有关键字的 任务 名称-->
    <select id="selectTaskName" resultType="java.lang.String">
        SELECT t1.task_name from prod_task_user AS t1
        LEFT JOIN product AS t2 ON t1.prod_id = t2.prod_id
        WHERE (t1.user_auth = #{authOperator} OR t1.user_auth= 5)  AND t1.user_id = #{operatorId} AND t1.prod_id IN (SELECT prod_id FROM product WHERE ifsend = 1 AND ifdelete = 0)
        AND concat(t1.task_name,t2.prod_model) LIKE concat('%',#{keywords},'%');
    </select>
    <!--    /**【提交任务】select task 查任务和对应的产品*/
TaskAndProd selectTaskAndProd(String prodMode, String taskName);-->
    <select id="selectTaskAndProd" resultType="com.ss.managesys.entity.po.Task">
        SELECT t1.task_name,t1.prod_id,t2.prod_model from prod_task_user AS t1
        LEFT JOIN product AS t2 ON t1.prod_id = t2.prod_id
        WHERE (t1.user_auth = #{authOperator} OR t1.user_auth = 5) AND t1.user_id = #{operatorId} AND t1.prod_id IN (SELECT prod_id FROM product WHERE ifsend = 1 AND ifdelete = 0)
        AND concat(t1.task_name,t2.prod_model) LIKE concat('%',#{keywords},'%') AND t2.prod_status != 5;
    </select>


    <!--【操作员产品任务列表】补充任务对应检验员
            查找的为对应匹配的 没有被检验员确认的 多个 检验员情况-->
    <select id="selectTaskExaminer" resultType="com.ss.managesys.entity.vo.tvo.OperatorTvo">
        SELECT t1.task_name,GROUP_CONCAT(t2.user_name) AS examiner,GROUP_CONCAT(t1.user_id) AS examinerIds
        FROM prod_task_user AS t1
        LEFT JOIN `user` AS t2 on t1.user_id = t2.user_id
        WHERE t1.user_auth = #{authExaminer} AND
        <foreach collection="taskAndProds" item="taskAndProd" open="(" separator="OR" close=")">
            (t1.task_name = #{taskAndProd.taskName} AND t1.prod_id = #{taskAndProd.prodId})
        </foreach>
        GROUP BY t1.task_name,t1.prod_id
        ORDER BY t1.task_name
    </select>

    <!--    /**【操作员产品任务列表】补充任务列表其他字段 */
    ArrayList<OperatorTvo> selectTaskOperCards(@Param("taskAndProds") ArrayList< TaskAndProd> taskAndProds);-->
    <select id="selectTaskOperCards" resultType="com.ss.managesys.entity.vo.tvo.OperatorTvo">
        SELECT t1.prod_model,t1.task_name,t1.planday AS planDay,(TIMESTAMPDIFF(day,t1.task_creatday,t1.task_updateday)+1) AS realDay,
                t1.task_status,t2.user_name AS examiner,t1.examiner_id AS examinerIds,t1.examin_status,t1.task_creatday
        FROM task AS t1
        LEFT JOIN `user` AS t2 ON t1.examiner_id = t2.user_id
        WHERE t1.ifdelete = 0 AND
        <foreach collection="taskAndProds" item="taskAndProd" open="(" separator="OR" close=")">
            (t1.task_name = #{taskAndProd.taskName} AND t1.prod_Model = #{taskAndProd.prodModel})
        </foreach>
    </select>
</mapper>